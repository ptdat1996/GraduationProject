@model ShopTree.Areas.Admin.Models.BlogViewModel
@using ShopTree.Common
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<main class="main">
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-md-12 p-2">
                    <div class="card">
                        <div class="card-header">
                            <strong>Tạo mới blog</strong>
                        </div>
                        @using (Ajax.BeginForm("Create", "Blogs", new { area = "Admin" },
                            new AjaxOptions
                            {
                                HttpMethod = "POST",
                                LoadingElementId = "loader",
                                OnBegin = "OnBegin",
                                OnSuccess = "OnSuccess"
                            }))
                        {
                            <div class="card-body">

                                <div class="form-group row">
                                    <div class="col-md-6 row">
                                        <label class="col-md-3 col-form-label">Tiêu đề(*) :</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @placeholder = "Tên tiêu đề....", @autofocus = "autofocus" })
                                            <div class="field-error">
                                                @Html.ValidationMessage("Title", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 row">
                                        <label class="col-md-3 col-form-label">Độ ưu tiên(*) :</label>
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model=>model.Priority, Enum.GetValues(typeof(Constants.HOT_LEVEL))
                                                                                        .Cast<Constants.HOT_LEVEL>()
                                                                                        .Select(x => new SelectListItem
                                                                                        {
                                                                                            Text = x.ToString(),
                                                                                            Value = ((int)x).ToString()
                                                                                        }),
                                                                                        new { @class="form-control"})
                                            <div class="field-error"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-md-6 row">
                                        <label class="col-md-3 col-form-label">Mô tả(*) :</label>
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 11 })
                                            <div class="field-error">
                                                @Html.ValidationMessage("Description", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 row">
                                        <label class="col-md-3 col-form-label">Image(*) :</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(model => model.ImageFile, new { @type = "file", @accept = "image/*", @onchange = "loadFile(event)" })
                                            <div class="field-error">
                                                @Html.ValidationMessage("ImageFile", new { @class = "text-danger" })
                                            </div>
                                            <div class="img-container col-md-9">
                                                <img src="#" id="preview" alt="" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="card-footer">
                                <a class="custom-btn custom-btn-dark" href="@Url.Action("AllBlog", "Blogs", new { area = "Admin" })">
                                    <i class="fa fa-arrow-left"></i> Quay lại danh sách
                                </a>
                                <button class="custom-btn custom-btn-success" type="submit">
                                    <i class="fa fa-plus-circle"></i> Tạo mới
                                </button>
                                <div class="loading-container" id="loader">
                                    <img src="~/Assets/admin/img/loading.gif" class="loading-img" />
                                    Loading....
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

